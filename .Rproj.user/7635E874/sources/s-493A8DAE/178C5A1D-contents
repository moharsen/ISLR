---
title: "ISLR, chapter 2"
author: "ms"
date: "12/11/2019"
output: github_document
---

```{r setup, echo = FALSE, include=FALSE}
library(ISLR)
library(tidyverse)
library(here)
theme_set(theme_light())
```

### Figure 2.1
Description from ISLR:

>FIGURE 2.1. The `Advertising` data set. The plot displays `sales`, in thousands of units, as a function of `TV`, `radio`, and `newspaper` budgets, in thousands of dollars, for 200 diﬀerent markets. In each plot we show the simple least squares ﬁt of `sales` to that variable, as described in Chapter 3. In other words, each blue line represents a simple model that can be used to predict `sales` using `TV`, `radio`, and `newspaper`, respectively.

Getting this data was not straightforward. I located this data in an indirect reference in GitHub Inguen-toan's [repo](https://github.com/nguyen-toan/ISLR). Forked this repo for posterity, and will be using this instead

```{r}
Advertising <- read_csv(here("dataset", "Advertising.csv"))
Advertising
```

Again, it is possible to do this using separate plots, but where is the fun in that? Let's gather and facet sales against 3 other plots


```{r}
gather_df <- Advertising %>% 
  select(-X1) %>% 
  gather(key = "Medium", value = "ad_expense", -Sales) # Don't need to save this, more for readabilty

gather_df %>% 
  ggplot(aes(x = ad_expense, y = Sales))+
  geom_point()+
  stat_smooth(method = "lm", 
              formula = y ~ x, se=FALSE)+
  facet_wrap(~Medium, scales = "free_x")+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())

ggsave(here("figures", "Chapter2", "figure2_1.jpg"))
  
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
